{"version":3,"sources":["config/Firebase.js","Form.js","utilities.js","Summary.js","ThisMonth.js","LastMonth.js","PreviousMonths.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Form","props","state","category","date","amount","notes","handleChange","bind","handleSubmit","prevProps","this","setState","editEntry","e","target","value","type","id","Number","name","keyCode","String","Date","console","log","isEditing","database","ref","editId","set","toggleEditing","push","onKeyDown","className","onChange","placeholder","autoFocus","supportedCategories","map","i","Object","keys","emoji","htmlFor","key","undefined","role","aria-label","checked","React","Component","monthDay","userDate","getMonth","getDate","Summary","expenses","filter","reduce","a","b","income","balance","ThisMonth","handleClick","k","deleteExpense","parentElement","db","thisMonthDb","onClick","LastMonth","PreviousMonths","pizza","gas","utility","groceries","App","on","snap","val","child","remove","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15a7c289.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \"AIzaSyCE5pA2JSdfAPD5qnWsEEvOXEx-pI4aeLk\",\n  authDomain: \"finanza-react.firebaseapp.com\",\n  databaseURL: \"https://finanza-react.firebaseio.com\",\n  projectId: \"finanza-react\",\n  storageBucket: \"finanza-react.appspot.com\",\n  messagingSenderId: \"88000701371\",\n  appId: \"1:88000701371:web:9b451832ac2b498fea1a9e\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import React from \"react\";\nimport firebase from \"./config/Firebase\";\nimport { supportedCategories } from \"./App.js\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: \"\",\n      date: \"\",\n      amount: \"\",\n      notes: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState(this.props.editEntry);\n    }\n  }\n\n  handleChange(e) {\n    const target = e.target;\n    const value =\n      target.type === \"radio\"\n        ? target.id\n        : Number(target.value) || target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(e) {\n    if (e.keyCode === 13) {\n      const state = { ...this.state };\n\n      if (!state.date) {\n        state.date = String(new Date());\n      } else {\n        state.date = String(new Date(state.date));\n      }\n      if (!state.category) {\n        state.category = \"‚ùì\";\n      }\n      console.log(state);\n\n      if (this.props.isEditing) {\n        firebase\n          .database()\n          .ref(\"expenses/\" + this.props.editId)\n          .set(state);\n        this.props.toggleEditing(false);\n      } else {\n        firebase.database().ref(\"expenses\").push(state);\n      }\n\n      return this.setState({\n        category: \"\",\n        date: \"\",\n        amount: \"\",\n        notes: \"\",\n      });\n    }\n  }\n\n  render() {\n    return (\n      <form id=\"entry-form\" onKeyDown={this.handleSubmit}>\n        <div className=\"display crt\">\n          <div>\n            <input\n              value={this.state.notes}\n              onChange={this.handleChange}\n              type=\"text\"\n              placeholder=\"Notes\"\n              name=\"notes\"\n              className=\"notes\"\n            />\n            <input\n              value={this.state.date}\n              onChange={this.handleChange}\n              type=\"text\"\n              placeholder=\"Date\"\n              name=\"date\"\n              className=\"date\"\n            />\n          </div>\n          <input\n            value={this.state.amount}\n            onChange={this.handleChange}\n            id=\"display-amount\"\n            type=\"number\"\n            placeholder=\"$\"\n            autoFocus\n            name=\"amount\"\n            className=\"amount\"\n          />\n        </div>\n        <div className=\"categories-selector\">\n          {supportedCategories.map((i) => {\n            let category = Object.keys(i)[0];\n            let emoji = i[category];\n            return (\n              <label\n                htmlFor={category}\n                key={category}\n                className={\n                  this.state.category === emoji ? \"highlighted\" : undefined\n                }\n              >\n                <span role=\"img\" aria-label={\"Emoji of \" + category}>\n                  {emoji}\n                </span>\n                <input\n                  checked={this.state.category === category}\n                  onChange={this.handleChange}\n                  type=\"radio\"\n                  id={emoji}\n                  name=\"category\"\n                />\n              </label>\n            );\n          })}\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","export function monthDay(userDate) {\n  const date = new Date(userDate);\n  const formatted = `${date.getMonth() + 1} / ${date.getDate()}`;\n  return formatted;\n}\n","import React from \"react\";\n\nexport default function Summary(props) {\n  const expenses = Object.keys(props.database)\n    .filter((key) => props.database[key].amount > 0)\n    .map((key) => props.database[key].amount)\n    .reduce((a, b) => a + b, 0);\n\n  const income = Object.keys(props.database)\n    .filter((key) => props.database[key].amount < 0)\n    .map((key) => props.database[key].amount)\n    .reduce((a, b) => a + b, 0);\n\n  const balance = -income - expenses;\n\n  return (\n    <ul className=\"summary\">\n      <li>\n        <h3>Expenses</h3>\n        <p>{expenses}</p>\n      </li>\n      <li>\n        <h3>Income</h3>\n        <p>{income}</p>\n      </li>\n      <li>\n        <h3>Balance</h3>\n        <p>{balance}</p>\n      </li>\n    </ul>\n  );\n}\n","import React from \"react\";\nimport { monthDay } from \"./utilities\";\nimport Summary from \"./Summary\";\n\nclass ThisMonth extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(k) {\n    if (k.target.id) {\n      this.props.deleteExpense(k.target.id);\n      console.log(\"deleted\");\n    }\n    const id = k.target.parentElement.id;\n    this.props.toggleEditing(true, id);\n  }\n\n  render() {\n    const db = this.props.database || [];\n    const thisMonthDb = {};\n    for (let key of Object.keys(db)) {\n      if (new Date(db[key].date).getMonth() === new Date().getMonth()) {\n        thisMonthDb[key] = db[key];\n      }\n    }\n\n    return (\n      <div className=\"element\">\n        <h2>This Month</h2>\n        <Summary database={thisMonthDb} />\n        <div className=\"list\">\n          {Object.keys(thisMonthDb).map((k) => {\n            return (\n              <div key={k}>\n                <div className=\"entry\" id={k} onClick={this.handleClick}>\n                  <span className=\"icon\">{db[k].category}</span>\n                  <p>{monthDay(db[k].date)}</p>\n                  <p>{db[k].amount}</p>\n                  <p>{db[k].notes}</p>\n                  <span\n                    id={k}\n                    onClick={this.handleClick}\n                    className=\"icon delete\"\n                  >\n                    ‚ùå\n                  </span>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ThisMonth;\n","import React from \"react\";\nimport { monthDay } from \"./utilities\";\nimport Summary from \"./Summary\";\n\nclass LastMonth extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(k) {\n    if (k.target.id) {\n      this.props.deleteExpense(k.target.id);\n      console.log(\"deleted\");\n    }\n    const id = k.target.parentElement.id;\n    this.props.toggleEditing(true, id);\n  }\n\n  render() {\n    const db = this.props.database || [];\n    const thisMonthDb = {};\n    for (let key of Object.keys(db)) {\n      if (new Date(db[key].date).getMonth() === new Date().getMonth() - 1) {\n        thisMonthDb[key] = db[key];\n      }\n    }\n\n    return (\n      <div className=\"element\">\n        <h2>Last Month</h2>\n        <Summary database={thisMonthDb} />\n        <div className=\"list\">\n          {Object.keys(thisMonthDb).map((k) => {\n            return (\n              <div key={k}>\n                <div className=\"entry\" id={k} onClick={this.handleClick}>\n                  <span className=\"icon\">{db[k].category}</span>\n                  <p>{monthDay(db[k].date)}</p>\n                  <p>{db[k].amount}</p>\n                  <p>{db[k].notes}</p>\n                  <span\n                    id={k}\n                    onClick={this.handleClick}\n                    className=\"icon delete\"\n                  >\n                    ‚ùå\n                  </span>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LastMonth;\n","import React from \"react\";\nimport { monthDay } from \"./utilities\";\n\nclass PreviousMonths extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(k) {\n    const id = k.target.parentElement.id;\n    this.props.toggleEditing(true, id);\n  }\n\n  render() {\n    const db = this.props.database || {};\n    const thisMonthDb = {};\n    for (let key of Object.keys(db)) {\n      if (new Date(db[key].date).getMonth() < new Date().getMonth() - 1) {\n        thisMonthDb[key] = db[key];\n      }\n    }\n\n    return (\n      <div className=\"element\">\n        <h2>Previous Months</h2>\n        <ol>\n          <p>Category</p>\n          <p>Date</p>\n          <p>Amount</p>\n          <p>Notes</p>\n        </ol>\n        <div className=\"list\">\n          {Object.keys(thisMonthDb).map((k) => {\n            return (\n              <div key={k}>\n                <div className=\"entry\" id={k} onClick={this.handleClick}>\n                  <span className=\"icon\">{db[k].category}</span>\n                  <p>{monthDay(db[k].date)}</p>\n                  <p>{db[k].amount}</p>\n                  <p>{db[k].notes}</p>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PreviousMonths;\n","import React from \"react\";\nimport firebase from \"./config/Firebase\";\nimport Form from \"./Form\";\nimport ThisMonth from \"./ThisMonth\";\nimport LastMonth from \"./LastMonth\";\nimport PreviousMonths from \"./PreviousMonths\";\n\n// Currently supported categories\nexport const supportedCategories = [\n  { pizza: \"üçï\" },\n  { gas: \"‚õΩÔ∏è\" },\n  { utility: \"‚öôÔ∏è\" },\n  { groceries: \"ü•ë\" },\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      database: {},\n      isEditing: false,\n      editId: null,\n    };\n\n    this.toggleEditing = this.toggleEditing.bind(this);\n    this.deleteExpense = this.deleteExpense.bind(this);\n  }\n\n  componentDidMount() {\n    // This sets the current state to the database\n    this.db = firebase.database().ref(\"expenses\");\n    this.db.on(\"value\", (snap) => {\n      this.setState({ database: snap.val() });\n    });\n  }\n\n  toggleEditing(state, id) {\n    if (state === true && id) {\n      return this.setState({ isEditing: state, editId: id });\n    }\n    return this.setState({ isEditing: false, editId: null });\n  }\n\n  deleteExpense(id) {\n    this.db.child(id).remove();\n  }\n\n  render() {\n    let editEntry = this.state.editId\n      ? this.state.database[this.state.editId]\n      : null;\n\n    return (\n      <div className=\"App\">\n        <Form\n          database={this.state.database}\n          toggleEditing={this.toggleEditing}\n          isEditing={this.state.isEditing}\n          editEntry={editEntry}\n          editId={this.state.editId}\n        />\n        <ThisMonth\n          database={this.state.database}\n          toggleEditing={this.toggleEditing}\n          deleteExpense={this.deleteExpense}\n        />\n        <LastMonth\n          database={this.state.database}\n          toggleEditing={this.toggleEditing}\n          deleteExpense={this.deleteExpense}\n        />\n        <PreviousMonths\n          database={this.state.database}\n          toggleEditing={this.toggleEditing}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./App.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
{"version":3,"sources":["config/Firebase.js","Form.js","utilities.js","ThisMonth.js","LastMonth.js","PreviousMonths.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Form","props","state","category","date","amount","notes","handleChange","bind","handleSubmit","prevProps","this","setState","editEntry","e","target","value","type","id","name","keyCode","String","Date","console","log","isEditing","database","ref","editId","set","toggleEditing","push","onKeyDown","className","onChange","placeholder","autoFocus","supportedCategories","map","i","Object","keys","emoji","htmlFor","key","undefined","role","aria-label","checked","React","Component","monthDay","userDate","getMonth","getDate","ThisMonth","handleClick","k","parentElement","db","thisMonthDb","onClick","PreviousMonths","pizza","gas","utility","groceries","App","on","snap","val","LastMonth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fecb95ec.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \"AIzaSyCE5pA2JSdfAPD5qnWsEEvOXEx-pI4aeLk\",\n  authDomain: \"finanza-react.firebaseapp.com\",\n  databaseURL: \"https://finanza-react.firebaseio.com\",\n  projectId: \"finanza-react\",\n  storageBucket: \"finanza-react.appspot.com\",\n  messagingSenderId: \"88000701371\",\n  appId: \"1:88000701371:web:9b451832ac2b498fea1a9e\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import React from \"react\";\nimport firebase from \"./config/Firebase\";\nimport { supportedCategories } from \"./App.js\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: \"\",\n      date: \"\",\n      amount: \"\",\n      notes: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState(this.props.editEntry);\n    }\n  }\n\n  handleChange(e) {\n    const target = e.target;\n    const value = target.type === \"radio\" ? target.id : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(e) {\n    if (e.keyCode === 13) {\n      const state = { ...this.state };\n      if (!state.date) {\n        state.date = String(new Date());\n      }\n      console.log(state);\n      if (this.props.isEditing) {\n        firebase\n          .database()\n          .ref(\"expenses/\" + this.props.editId)\n          .set(state);\n        this.props.toggleEditing(false);\n      } else {\n        firebase.database().ref(\"expenses\").push(state);\n      }\n      return this.setState({\n        category: \"\",\n        date: \"\",\n        amount: \"\",\n        notes: \"\",\n      });\n    }\n  }\n\n  render() {\n    return (\n      <form id=\"entry-form\" onKeyDown={this.handleSubmit}>\n        <div className=\"display crt\">\n          <div>\n            <input\n              value={this.state.notes}\n              onChange={this.handleChange}\n              type=\"text\"\n              placeholder=\"Notes\"\n              name=\"notes\"\n            />\n            <input\n              value={this.state.date}\n              onChange={this.handleChange}\n              type=\"text\"\n              placeholder=\"Date\"\n              name=\"date\"\n            />\n          </div>\n          <input\n            value={this.state.amount}\n            onChange={this.handleChange}\n            id=\"display-amount\"\n            type=\"number\"\n            placeholder=\"$\"\n            autoFocus\n            name=\"amount\"\n          />\n        </div>\n        <div className=\"categories-selector\">\n          {supportedCategories.map((i) => {\n            let category = Object.keys(i)[0];\n            let emoji = i[category];\n            return (\n              <label\n                htmlFor={category}\n                key={category}\n                className={\n                  this.state.category === emoji ? \"highlighted\" : undefined\n                }\n              >\n                <span role=\"img\" aria-label={\"Emoji of \" + category}>\n                  {emoji}\n                </span>\n                <input\n                  checked={this.state.category === category}\n                  onChange={this.handleChange}\n                  type=\"radio\"\n                  id={emoji}\n                  name=\"category\"\n                />\n              </label>\n            );\n          })}\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","export function monthDay(userDate) {\n  const date = new Date(userDate);\n  const formatted = `${date.getMonth() + 1} / ${date.getDate()}`;\n  return formatted;\n}\n","import React from \"react\";\nimport { monthDay } from \"./utilities\";\n\nclass ThisMonth extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(k) {\n    const id = k.target.parentElement.id;\n    this.props.toggleEditing(true, id);\n  }\n\n  render() {\n    const db = this.props.database || [];\n    const thisMonthDb = {};\n    for (let key of Object.keys(db)) {\n      if (new Date(db[key].date).getMonth() === new Date().getMonth()) {\n        thisMonthDb[key] = db[key];\n      }\n    }\n\n    return (\n      <div className=\"element\">\n        <h2>This Month</h2>\n        <ol>\n          <p>Category</p>\n          <p>Date</p>\n          <p>Amount</p>\n          <p>Notes</p>\n        </ol>\n        <div className=\"list\">\n          {Object.keys(thisMonthDb).map((k) => {\n            return (\n              <div key={k}>\n                <div className=\"entry\" id={k} onClick={this.handleClick}>\n                  <span className=\"icon\">{db[k].category}</span>\n                  <p>{monthDay(db[k].date)}</p>\n                  <p>{db[k].amount}</p>\n                  <p>{db[k].notes}</p>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ThisMonth;\n","import React from \"react\";\nimport { monthDay } from \"./utilities\";\n\nclass ThisMonth extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(k) {\n    const id = k.target.parentElement.id;\n    this.props.toggleEditing(true, id);\n  }\n\n  render() {\n    const db = this.props.database || {};\n    const thisMonthDb = {};\n    for (let key of Object.keys(db)) {\n      if (new Date(db[key].date).getMonth() === new Date().getMonth() - 1) {\n        thisMonthDb[key] = db[key];\n      }\n    }\n\n    return (\n      <div className=\"element\">\n        <h2>Last Month</h2>\n        <ol>\n          <p>Category</p>\n          <p>Date</p>\n          <p>Amount</p>\n          <p>Notes</p>\n        </ol>\n        <div className=\"list\">\n          {Object.keys(thisMonthDb).map((k) => {\n            return (\n              <div key={k}>\n                <div className=\"entry\" id={k} onClick={this.handleClick}>\n                  <span className=\"icon\">{db[k].category}</span>\n                  <p>{monthDay(db[k].date)}</p>\n                  <p>{db[k].amount}</p>\n                  <p>{db[k].notes}</p>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ThisMonth;\n","import React from \"react\";\nimport { monthDay } from \"./utilities\";\n\nclass PreviousMonths extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(k) {\n    const id = k.target.parentElement.id;\n    this.props.toggleEditing(true, id);\n  }\n\n  render() {\n    const db = this.props.database || {};\n    const thisMonthDb = {};\n    for (let key of Object.keys(db)) {\n      if (new Date(db[key].date).getMonth() < new Date().getMonth() - 1) {\n        thisMonthDb[key] = db[key];\n      }\n    }\n\n    return (\n      <div className=\"element\">\n        <h2>Previous Months</h2>\n        <ol>\n          <p>Category</p>\n          <p>Date</p>\n          <p>Amount</p>\n          <p>Notes</p>\n        </ol>\n        <div className=\"list\">\n          {Object.keys(thisMonthDb).map((k) => {\n            return (\n              <div key={k}>\n                <div className=\"entry\" id={k} onClick={this.handleClick}>\n                  <span className=\"icon\">{db[k].category}</span>\n                  <p>{monthDay(db[k].date)}</p>\n                  <p>{db[k].amount}</p>\n                  <p>{db[k].notes}</p>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PreviousMonths;\n","import React from \"react\";\nimport firebase from \"./config/Firebase\";\nimport Form from \"./Form\";\nimport ThisMonth from \"./ThisMonth\";\nimport LastMonth from \"./LastMonth\";\nimport PreviousMonths from \"./PreviousMonths\";\n\n// Currently supported categories\nexport const supportedCategories = [\n  { pizza: \"🍕\" },\n  { gas: \"⛽️\" },\n  { utility: \"⚙️\" },\n  { groceries: \"🥑\" },\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      database: {},\n      isEditing: false,\n      editId: null,\n    };\n\n    this.toggleEditing = this.toggleEditing.bind(this);\n  }\n\n  componentDidMount() {\n    // This sets the current state to the database\n    let db = firebase.database().ref(\"expenses\");\n    db.on(\"value\", (snap) => {\n      this.setState({ database: snap.val() });\n    });\n  }\n\n  toggleEditing(state, id) {\n    if (state === true && id) {\n      return this.setState({ isEditing: state, editId: id });\n    }\n    return this.setState({ isEditing: false, editId: null });\n  }\n\n  render() {\n    let editEntry = this.state.editId\n      ? this.state.database[this.state.editId]\n      : null;\n\n    return (\n      <div className=\"App\">\n        <Form\n          database={this.state.database}\n          toggleEditing={this.toggleEditing}\n          isEditing={this.state.isEditing}\n          editEntry={editEntry}\n          editId={this.state.editId}\n        />\n        <ThisMonth\n          database={this.state.database}\n          toggleEditing={this.toggleEditing}\n        />\n        <LastMonth\n          database={this.state.database}\n          toggleEditing={this.toggleEditing}\n        />\n        <PreviousMonths\n          database={this.state.database}\n          toggleEditing={this.toggleEditing}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./App.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
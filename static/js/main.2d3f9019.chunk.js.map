{"version":3,"sources":["config/Firebase.js","Form.js","Summary.js","List.js","utilities.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Form","props","state","category","date","amount","notes","handleChange","bind","handleSubmit","focus","this","amountInput","prevProps","isEditing","setState","editEntry","e","console","log","target","value","type","id","Number","name","keyCode","String","Date","database","ref","editingId","set","toggleEditing","push","className","onKeyDown","onChange","placeholder","supportedCategories","map","i","Object","keys","emoji","onClick","htmlFor","key","undefined","role","aria-label","checked","React","Component","Summary","expenses","filter","reduce","a","b","income","balance","accounting","format","List","inverted","handleClick","sortDb","setSort","k","deleteExpense","parentElement","db","filteredKeys","sort","reverse","sortedDb","innerHTML","toLowerCase","prev","title","userDate","getMonth","getDate","monthDay","pizza","gas","utility","groceries","App","on","snap","val","child","remove","thisMonthDb","getYear","acc","lastMonthDb","toDateDb","rel","href","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d3f9019.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \"AIzaSyCE5pA2JSdfAPD5qnWsEEvOXEx-pI4aeLk\",\n  authDomain: \"finanza-react.firebaseapp.com\",\n  databaseURL: \"https://finanza-react.firebaseio.com\",\n  projectId: \"finanza-react\",\n  storageBucket: \"finanza-react.appspot.com\",\n  messagingSenderId: \"88000701371\",\n  appId: \"1:88000701371:web:9b451832ac2b498fea1a9e\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;\n","import React from \"react\";\nimport firebase from \"./config/Firebase\";\nimport { supportedCategories } from \"./App.js\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: \"\",\n      date: \"\",\n      amount: \"\",\n      notes: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.focus = this.focus.bind(this);\n  }\n\n  focus() {\n    this.amountInput.focus();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.isEditing && !this.props.isEditing) {\n      this.setState({\n        category: \"\",\n        date: \"\",\n        amount: \"\",\n        notes: \"\",\n      });\n    }\n\n    if (prevProps !== this.props) {\n      this.setState(this.props.editEntry);\n    }\n  }\n\n  handleChange(e) {\n    console.log(\"handleChange\", e);\n    const target = e.target;\n    const value =\n      target.type === \"radio\"\n        ? target.id\n        : Number(target.value) || target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n    });\n    console.log(this.state);\n  }\n\n  handleSubmit(e) {\n    if (e.keyCode === 13) {\n      console.log(\"handleSubmit\");\n      const state = { ...this.state };\n\n      if (!state.amount || Number(state.amount) === 0)\n        return this.setState({\n          category: \"\",\n          date: \"\",\n          amount: \"\",\n          notes: \"\",\n        });\n\n      if (!state.date) {\n        state.date = String(new Date());\n      } else {\n        state.date = String(new Date(state.date));\n      }\n\n      if (!state.category) {\n        state.category = \"❓\";\n      }\n\n      if (this.props.isEditing) {\n        firebase\n          .database()\n          .ref(\"expenses/\" + this.props.editingId)\n          .set(state);\n        this.props.toggleEditing(false);\n      } else {\n        firebase.database().ref(\"expenses\").push(state);\n      }\n\n      return this.setState({\n        category: \"\",\n        date: \"\",\n        amount: \"\",\n        notes: \"\",\n      });\n    }\n  }\n\n  render() {\n    return (\n      <form\n        className={\n          this.state.amount < 0 ? \"red\" : this.state.amount > 0 ? \"green\" : \"\"\n        }\n        id=\"entry-form\"\n        onKeyDown={this.handleSubmit}\n      >\n        <div className=\"display\">\n          <div>\n            <input\n              value={this.state.notes}\n              onChange={this.handleChange}\n              type=\"text\"\n              placeholder=\"Notes\"\n              name=\"notes\"\n              className=\"notes\"\n            />\n            <input\n              value={this.state.date}\n              onChange={this.handleChange}\n              type=\"text\"\n              placeholder=\"Date\"\n              name=\"date\"\n              className=\"date\"\n            />\n          </div>\n          <input\n            ref={(ref) => {\n              this.amountInput = ref;\n            }}\n            value={this.state.amount}\n            onChange={this.handleChange}\n            id=\"display-amount\"\n            type=\"number\"\n            placeholder=\"$\"\n            // autoFocus\n            name=\"amount\"\n            className=\"amount\"\n          />\n        </div>\n        <div className=\"categories-selector\">\n          {supportedCategories.map((i) => {\n            let category = Object.keys(i)[0];\n            let emoji = i[category];\n            return (\n              <label\n                onClick={this.focus}\n                htmlFor={category}\n                key={category}\n                className={\n                  this.state.category === emoji ? \"highlighted\" : undefined\n                }\n              >\n                <span role=\"img\" aria-label={\"Emoji of \" + category}>\n                  {emoji}\n                </span>\n                <input\n                  checked={this.state.category === category}\n                  onChange={this.handleChange}\n                  type=\"radio\"\n                  id={emoji}\n                  name=\"category\"\n                />\n              </label>\n            );\n          })}\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport accounting from \"accounting\";\n\nexport default function Summary(props) {\n  const expenses = Object.keys(props.database)\n    .filter((key) => props.database[key].amount > 0)\n    .map((key) => props.database[key].amount)\n    .reduce((a, b) => a + b, 0);\n\n  const income = Object.keys(props.database)\n    .filter((key) => props.database[key].amount < 0)\n    .map((key) => props.database[key].amount)\n    .reduce((a, b) => a + b, 0);\n\n  const balance = -income - expenses;\n\n  return (\n    <ul className=\"summary\">\n      <li>\n        <h3>Expenses</h3>\n        <p>{accounting.format(expenses)}</p>\n      </li>\n      <li>\n        <h3>Income</h3>\n        <p>{accounting.format(income)}</p>\n      </li>\n      <li>\n        <h3>Balance</h3>\n        <p>{accounting.format(balance)}</p>\n      </li>\n    </ul>\n  );\n}\n","import React from \"react\";\nimport { monthDay } from \"./utilities\";\nimport Summary from \"./Summary\";\nimport accounting from \"accounting\";\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inverted: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.sortDb = this.sortDb.bind(this);\n    this.setSort = this.setSort.bind(this);\n  }\n\n  handleClick(k) {\n    if (k.target.id) {\n      this.props.deleteExpense(k.target.id);\n    }\n\n    const id = k.target.parentElement.id;\n\n    if (id === this.props.editingId) {\n      this.props.toggleEditing(false);\n      this.setState({ isEditing: false, editingId: null });\n      return;\n    }\n\n    this.props.toggleEditing(true, id);\n    this.setState({ isEditing: true, editingId: id });\n  }\n\n  sortDb(db) {\n    let filter = this.state.filter;\n    let filteredKeys = Object.keys(db).sort((a, b) => {\n      if (filter === \"date\") {\n        if (new Date(db[a][filter]) < new Date(db[b][filter])) return -1;\n        if (new Date(db[a][filter]) > new Date(db[b][filter])) return 1;\n      }\n      if (db[a][filter] < db[b][filter]) return -1;\n      if (db[a][filter] > db[b][filter]) return 1;\n      return 0;\n    });\n\n    if (this.state.inverted) {\n      filteredKeys = filteredKeys.reverse();\n    }\n\n    let sortedDb = {};\n    for (let key of filteredKeys) {\n      sortedDb[key] = db[key];\n    }\n\n    return sortedDb;\n  }\n\n  setSort(e) {\n    if (e.target.innerHTML.toLowerCase() === this.state.filter) {\n      return this.setState((prev) => ({ inverted: !prev.inverted }));\n    }\n    this.setState({ filter: e.target.innerHTML.toLowerCase() });\n  }\n\n  render() {\n    const db = !this.state.filter\n      ? this.props.database\n      : this.sortDb(this.props.database);\n\n    return (\n      <div className=\"element\">\n        <h2>{this.props.title}</h2>\n        <Summary database={db} />\n        <div onClick={this.setSort} className=\"description\">\n          <p>Category</p>\n          <p>Date</p>\n          <p>Amount</p>\n          <p>Notes</p>\n        </div>\n        <div className=\"list\">\n          {Object.keys(db).map((k) => {\n            return (\n              <div\n                className={\n                  this.props.isEditing && this.props.editingId === k\n                    ? \"selected\"\n                    : \"\"\n                }\n                key={k}\n              >\n                <div className=\"entry\" id={k} onClick={this.handleClick}>\n                  <span className=\"icon\">{db[k].category}</span>\n                  <p>{monthDay(db[k].date)}</p>\n                  <p>{accounting.format(db[k].amount)}</p>\n                  <p>{db[k].notes}</p>\n                  <span\n                    role=\"img\"\n                    aria-label=\"emoji\"\n                    id={k}\n                    onClick={this.handleClick}\n                    className=\"icon delete\"\n                  >\n                    ❌\n                  </span>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default List;\n","export function monthDay(userDate) {\n  const date = new Date(userDate);\n  const formatted = `${date.getMonth() + 1}/${date.getDate()}`;\n  return formatted;\n}\n","import React from \"react\";\nimport firebase from \"./config/Firebase\";\nimport Form from \"./Form\";\nimport List from \"./List\";\n\n// Currently supported categories\nexport const supportedCategories = [\n  { pizza: \"🍕\" },\n  { gas: \"⛽️\" },\n  { utility: \"⚙️\" },\n  { groceries: \"🥑\" },\n];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      database: {},\n      isEditing: false,\n      editingId: null,\n    };\n\n    this.toggleEditing = this.toggleEditing.bind(this);\n    this.deleteExpense = this.deleteExpense.bind(this);\n  }\n\n  componentDidMount() {\n    this.db = firebase.database().ref(\"expenses\");\n    this.db.on(\"value\", (snap) => {\n      this.setState({ database: snap.val() });\n    });\n  }\n\n  toggleEditing(state, id) {\n    if (state === true && id) {\n      return this.setState({ isEditing: state, editingId: id });\n    }\n    return this.setState({ isEditing: false, editingId: null });\n  }\n\n  deleteExpense(id) {\n    this.db.child(id).remove();\n  }\n\n  render() {\n    const thisMonthDb = Object.keys(this.state.database)\n      .filter(\n        (e) =>\n          new Date(this.state.database[e].date).getMonth() ===\n            new Date().getMonth() &&\n          new Date(this.state.database[e].date).getYear() ===\n            new Date().getYear()\n      )\n      .reduce((acc, key) => {\n        return { ...acc, [key]: this.state.database[key] };\n      }, {});\n\n    const lastMonthDb = Object.keys(this.state.database)\n      .filter(\n        (e) =>\n          new Date(this.state.database[e].date).getMonth() ===\n          new Date().getMonth() - 1\n      )\n      .reduce((acc, key) => {\n        return { ...acc, [key]: this.state.database[key] };\n      }, {});\n\n    const toDateDb = Object.keys(this.state.database).reduce((acc, key) => {\n      return { ...acc, [key]: this.state.database[key] };\n    }, {});\n\n    let editEntry = this.state.editingId\n      ? this.state.database[this.state.editingId]\n      : null;\n\n    return (\n      <div>\n        <div className=\"App\">\n          <Form\n            database={this.state.database}\n            toggleEditing={this.toggleEditing}\n            isEditing={this.state.isEditing}\n            editEntry={editEntry}\n            editingId={this.state.editingId}\n          />\n          <List\n            title=\"This Month\"\n            database={thisMonthDb}\n            toggleEditing={this.toggleEditing}\n            deleteExpense={this.deleteExpense}\n            isEditing={this.state.isEditing}\n            editingId={this.state.editingId}\n          />\n          <List\n            title=\"Last Month\"\n            database={lastMonthDb}\n            toggleEditing={this.toggleEditing}\n            deleteExpense={this.deleteExpense}\n            isEditing={this.state.isEditing}\n            editingId={this.state.editingId}\n          />\n          <List\n            title=\"To Date\"\n            database={toDateDb}\n            toggleEditing={this.toggleEditing}\n            deleteExpense={this.deleteExpense}\n            isEditing={this.state.isEditing}\n            editingId={this.state.editingId}\n          />\n        </div>\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://georgecesar.com/\"\n        >\n          <p className=\"copyright\">\n            Copyright &copy; {new Date().getFullYear()} George Cesar. All rights\n            reserved.\n          </p>\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}